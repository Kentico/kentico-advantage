{"version":3,"sources":["webpack:///./src/components/phase-icon.js","webpack:///./src/components/project-phases.js","webpack:///./src/pages/index.js","webpack:///./src/components/teaser.js"],"names":["PhaseIconContainer","styled","li","_templateObject","style","project_phases_foreground","sm","_templateObject2","LinkContainer","a","_templateObject3","IconContainer","span","_templateObject4","PhaseIcon","render","react_default","createElement","href","this","props","url","title","src","icon","alt","dangerouslySetInnerHTML","__html","overview","React","Component","ProjectPhasesContainer","section","project_phases_templateObject","project_phases_background","ProjectPhases","gatsby_browser_entry","query","data","allKenticoCloudItemNavigationItem","edges","node","elements","child_items","map","item","content_item","phase","phase_icon","key","value","size","assets","_1151904293","__webpack_exports__","layout","jumbotron","className","header","teaser","project_phases","Teaser","react__WEBPACK_IMPORTED_MODULE_1___default","_content_zone__WEBPACK_IMPORTED_MODULE_2__","children"],"mappings":"+uCAIA,IAAMA,EAAqBC,UAAOC,GAAVC,IA0BPC,IAAcC,0BAIzBD,IAAYE,GA9BMC,MAsClBC,EAAgBP,UAAOQ,EAAVC,KAEbC,EAAgBV,UAAOW,KAAVC,KA0BJC,4FAjBXC,kBACI,OACIC,EAAAP,EAAAQ,cAACjB,EAAD,KACIgB,EAAAP,EAAAQ,cAACT,EAAD,CAAeU,KAAMC,KAAKC,MAAMC,IAAKC,MAAOH,KAAKC,MAAME,OACnDN,EAAAP,EAAAQ,cAACN,EAAD,KACIK,EAAAP,EAAAQ,cAAA,OACIM,IAAKJ,KAAKC,MAAMI,KAChBC,IAAKN,KAAKC,MAAME,SAGxBN,EAAAP,EAAAQ,cAAA,UAAID,EAAAP,EAAAQ,cAAA,YAAOE,KAAKC,MAAME,QACtBN,EAAAP,EAAAQ,cAAA,QAAMS,wBAAyB,CAACC,OAAQR,KAAKC,MAAMQ,kBAb/CC,IAAMC,0oBCxC9B,IAAMC,EAAyB9B,UAAO+B,QAAVC,IA+BA7B,IAAc8B,2BAkE3BC,4FAxDXpB,kBACI,OACIC,EAAAP,EAAAQ,cAACmB,EAAA,YAAD,CACIC,MAAK,aAoCLtB,OAAQ,SAAAuB,GAAI,OACRtB,EAAAP,EAAAQ,cAACc,EAAD,KACIf,EAAAP,EAAAQ,cAAA,UACKqB,EAAKC,kCAAkCC,MAAM,GAAGC,KAAKC,SAASC,YAC1DC,IAAI,SAAAC,GACD,OAAOA,EAAKH,SAASI,aAAaF,IAAI,SAAAG,GAClC,OAAQ/B,EAAAP,EAAAQ,cAAC+B,EAAD,CAAWC,IAAKF,EAAML,SAASrB,IAAI6B,MAAOC,KAAK,QAAQ3B,KAAMuB,EAAML,SAASlB,KAAK4B,OAAO,GAAG/B,IAAKA,IAAK0B,EAAML,SAASrB,IAAI6B,MAAO5B,MAAOyB,EAAML,SAASpB,MAAM4B,MAAOtB,SAAUmB,EAAML,SAASd,SAASsB,eA3CxOZ,KAAAe,QAJgBxB,IAAMC,WC3CnBwB,EAAA,0BACXtC,EAAAP,EAAAQ,cAACsC,EAAA,EAAD,KACIvC,EAAAP,EAAAQ,cAAA,YACID,EAAAP,EAAAQ,cAACuC,EAAA,EAAD,CACIC,UAAU,qBACVC,OAAO,oBACPC,OAAO,8LAGX3C,EAAAP,EAAAQ,cAAC0C,EAAA,EAAD,KACI3C,EAAAP,EAAAQ,cAAA,4BACAD,EAAAP,EAAAQ,cAAA,uRACAD,EAAAP,EAAAQ,cAAA,4OAGJD,EAAAP,EAAAQ,cAAC2C,EAAD,wFCnBNC,4FAEF9C,kBACI,OACI+C,EAAArD,EAAAQ,cAAC8C,EAAA,EAAD,CAAaN,UAAU,eAClBtC,KAAKC,MAAM4C,cALPnC,IAAMC,WAUZ+B","file":"component---src-pages-index-js-814b065c8d5c9706c474.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport * as style from '../styles'\r\n\r\nconst PhaseIconContainer = styled.li`\r\n    display: block;\r\n    min-height: (76px + (2*24px));\r\n    padding-left: 100px;\r\n    background-repeat: no-repeat;\r\n    background-position: left center;\r\n\r\n    h3\r\n    {\r\n        margin: 0;\r\n        font-size: 2em;\r\n        font-family: 'Source Sans Pro', sans-serif;\r\n        font-weight: bold;\r\n        white-space: nowrap;\r\n        margin: auto auto 4px;\r\n    }\r\n    \r\n    h3 span::before\r\n    {\r\n        counter-increment: section;\r\n        content: counter(section) \". \";\r\n    }\r\n\r\n    p\r\n    {\r\n        margin: 0;\r\n        color: ${style.palette.project_phases_foreground};\r\n        line-height: 1.2em;\r\n    }\r\n\r\n    ${style.media.sm`\r\n        h3\r\n        {\r\n            margin: auto auto 6px;\r\n        }\r\n    `}\r\n`\r\n\r\nconst LinkContainer = styled.a`\r\n`\r\nconst IconContainer = styled.span`\r\n    display: block;\r\n    float: left;\r\n    width: 76px;\r\n    margin-right: 24px;\r\n`\r\n\r\nclass PhaseIcon extends React.Component\r\n{\r\n    render(){\r\n        return (\r\n            <PhaseIconContainer>\r\n                <LinkContainer href={this.props.url} title={this.props.title}>\r\n                    <IconContainer>\r\n                        <img\r\n                            src={this.props.icon}\r\n                            alt={this.props.title}\r\n                        />\r\n                    </IconContainer>\r\n                    <h3><span>{this.props.title}</span></h3>\r\n                    <span dangerouslySetInnerHTML={{__html: this.props.overview}}></span>\r\n                </LinkContainer>\r\n            </PhaseIconContainer>)\r\n    }\r\n}\r\n\r\nexport default PhaseIcon","import React from \"react\"\r\n\r\nimport { Link, graphql, StaticQuery } from \"gatsby\"\r\nimport * as Amp from 'react-amphtml'\r\nimport * as AmpHelpers from 'react-amphtml/helpers'\r\nimport { AmpScripts, AmpScriptsManager, headerBoilerplate} from 'react-amphtml/setup'\r\nimport styled from \"styled-components\"\r\nimport * as style from '../styles'\r\nimport { mapNavigationItems } from '../helpers/navigation-item'\r\nimport PhaseIcon from './phase-icon'\r\n\r\nconst ProjectPhasesContainer = styled.section`\r\n    ol\r\n    {\r\n        list-style-type: none;\r\n    }\r\n    ol li::before\r\n    {\r\n        content: \"\";\r\n    }\r\n    li a {\r\n        display: block;\r\n        text-decoration: none;\r\n        padding: 24px 0 24px 16px;\r\n    }\r\n    li\r\n    {\r\n        margin: -10px;\r\n        padding: 10px;\r\n        border-bottom: 1px solid #ececec;\r\n        background-position: 12px;\r\n    }\r\n    li:last-child\r\n    {\r\n        border-bottom:0;\r\n    }\r\n    ol li\r\n    {\r\n        margin: 0;\r\n    }\r\n    li:hover\r\n    {\r\n        background-color: ${style.palette.project_phases_background};\r\n    }\r\n    p\r\n    {\r\n        padding: 0;\r\n    }\r\n`\r\n\r\nclass ProjectPhases extends React.Component\r\n{\r\n    render(){\r\n        return (\r\n            <StaticQuery\r\n                query={graphql`\r\n                        query Phases {\r\n                            allKenticoCloudItemNavigationItem(filter: {system: {codename: {eq: \"nav_project_phases\"}}}) {\r\n                                edges {\r\n                                  node {\r\n                                    elements {\r\n                                        child_items {\r\n                                            elements {\r\n                                                content_item {\r\n                                                    elements {\r\n                                                    title {\r\n                                                        value\r\n                                                    }\r\n                                                    url {\r\n                                                        value\r\n                                                    }\r\n                                                    overview {\r\n                                                        value\r\n                                                    }\r\n                                                    icon\r\n                                                    {\r\n                                                        assets { url }\r\n                                                    }\r\n                                                    }\r\n                                                    system {\r\n                                                    type\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                  }\r\n                                }\r\n                            }\r\n                        }\r\n                    `}\r\n                render={data => \r\n                    <ProjectPhasesContainer>\r\n                        <ol>\r\n                            {data.allKenticoCloudItemNavigationItem.edges[0].node.elements.child_items\r\n                                .map(item => {\r\n                                    return item.elements.content_item.map(phase => {\r\n                                        return (<PhaseIcon key={phase.elements.url.value} size=\"small\" icon={phase.elements.icon.assets[0].url} url={phase.elements.url.value} title={phase.elements.title.value} overview={phase.elements.overview.value} />);\r\n                                    })\r\n                                })}\r\n                        </ol>\r\n                    </ProjectPhasesContainer>\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectPhases\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Jumbotron from \"../components/jumbotron\"\r\nimport Helmet from 'react-helmet'\r\nimport Teaser from \"../components/teaser\"\r\nimport ProjectPhases from \"../components/project-phases\"\r\n\r\nexport default () => (\r\n    <Layout>\r\n        <main>\r\n            <Jumbotron\r\n                className=\"jumbotron-homepage\"\r\n                header=\"Kentico Advantage\"\r\n                teaser=\"Kentico Consulting team created this guide so you can leverage our experience with many different projects to help you avoid pitfalls and address potentially weak places in the project.\"\r\n            />\r\n            \r\n            <Teaser>\r\n                <h2>Project phases</h2>\r\n                <p>We identified six primary phases for Kentico projects. If you follow a waterfall like development approach you'll apply each section in a linear fashion over the course of the project. Alternatively, if you follow an agile approach, you'll do this as of each sprint.</p>\r\n                <p>Regardless of the approach you take, each phase covers the key concepts and best practices you need to know, presents real-world scenarios to help with application, and provides additional resources related to the section.</p>\r\n            </Teaser>\r\n            \r\n            <ProjectPhases />\r\n        </main>\r\n    </Layout>\r\n)","import React from \"react\"\r\nimport ContentZone from \"./content-zone\"\r\n\r\nclass Teaser extends React.Component\r\n{\r\n    render(){\r\n        return (\r\n            <ContentZone className=\"highlighted\">\r\n                {this.props.children}\r\n            </ContentZone>)\r\n    }\r\n}\r\n\r\nexport default Teaser"],"sourceRoot":""}