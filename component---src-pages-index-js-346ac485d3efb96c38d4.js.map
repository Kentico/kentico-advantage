{"version":3,"sources":["webpack:///./src/components/phase-icon.js","webpack:///./src/components/project-phases.js","webpack:///./src/pages/index.js","webpack:///./src/components/teaser.js"],"names":["PhaseIconContainer","styled","li","style","project_phases_foreground","sm","IconContainer","span","PhaseIcon","render","to","this","props","url","title","src","icon","alt","dangerouslySetInnerHTML","__html","overview","React","Component","ProjectPhasesContainer","section","project_phases_background","ProjectPhases","query","data","kontentItemNavigationItem","elements","child_items","value","map","item","content_item","phase","key","size","className","header","teaser","Teaser","children"],"mappings":"4WAKA,IAAMA,EAAqBC,UAAOC,GAAV,qFAAGD,CAAH,kXA0BPE,IAAcC,0BAIzBD,IAAYE,GA9BM,MAsClBC,EAAgBL,UAAOM,KAAV,gFAAGN,CAAH,4DA0BJO,E,kGAjBXC,OAAA,WACI,OACI,kBAACT,EAAD,KACI,kBAAC,OAAD,CAAMU,GAAIC,KAAKC,MAAMC,IAAKC,MAAOH,KAAKC,MAAME,OACxC,kBAACR,EAAD,KACI,yBACIS,IAAKJ,KAAKC,MAAMI,KAChBC,IAAKN,KAAKC,MAAME,SAGxB,4BAAI,8BAAOH,KAAKC,MAAME,QACtB,0BAAMI,wBAAyB,CAACC,OAAQR,KAAKC,MAAMQ,e,GAb/CC,IAAMC,WC3CxBC,EAAyBtB,UAAOuB,QAAV,6FAAGvB,CAAH,4TAgCAE,IAAcsB,2BAkE3BC,E,kGAxDXjB,OAAA,WACQ,OAAO,kBAAC,cAAD,CACHkB,MAAK,YAsCLlB,OAAQ,SAAAmB,GAAI,OACR,kBAACL,EAAD,KACI,4BACKK,EAAKC,0BAA0BC,SAASC,YAAYC,MAChDC,KAAI,SAAAC,GACD,OAAOA,EAAKJ,SAASK,aAAaH,MAAMC,KAAI,SAAAG,GACxC,OAAQ,kBAAC,EAAD,CAAWC,IAAKD,EAAMN,SAASjB,IAAImB,MAAOM,KAAK,QAAQtB,KAAMoB,EAAMN,SAASd,KAAKgB,MAAM,GAAGnB,IAAKA,IAAKuB,EAAMN,SAASjB,IAAImB,MAAOlB,MAAOsB,EAAMN,SAAShB,MAAMkB,MAAOZ,SAAUgB,EAAMN,SAASV,SAASY,oB,GAhDvNX,IAAMC,WCzCnB,4BACX,kBAAC,IAAD,KACI,8BACI,kBAAC,IAAD,CACIiB,UAAU,qBACVC,OAAO,oBACPC,OAAO,yNAGX,kBAAC,IAAD,KACI,8CACA,ySACA,8PAGJ,kBAAC,EAAD,U,mFClBNC,E,kGAEFjC,OAAA,WACI,OACI,kBAAC,IAAD,CAAa8B,UAAU,eAClB5B,KAAKC,MAAM+B,W,GALPtB,IAAMC,WAUZoB","file":"component---src-pages-index-js-346ac485d3efb96c38d4.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport * as style from '../styles'\nimport { Link } from 'gatsby'\n\nconst PhaseIconContainer = styled.li`\n    display: block;\n    min-height: (76px + (2*24px));\n    padding-left: 100px;\n    background-repeat: no-repeat;\n    background-position: left center;\n\n    h3\n    {\n        margin: 0;\n        font-size: 2em;\n        font-family: 'Source Sans Pro', sans-serif;\n        font-weight: bold;\n        white-space: nowrap;\n        margin: auto auto 4px;\n    }\n    \n    h3 span::before\n    {\n        counter-increment: section;\n        content: counter(section) \". \";\n    }\n\n    p\n    {\n        margin: 0;\n        color: ${style.palette.project_phases_foreground};\n        line-height: 1.2em;\n    }\n\n    ${style.media.sm`\n        h3\n        {\n            margin: auto auto 6px;\n        }\n    `}\n`;\n\nconst IconContainer = styled.span`\n    display: block;\n    float: left;\n    width: 76px;\n    margin-right: 24px;\n`;\n\nclass PhaseIcon extends React.Component\n{\n    render(){\n        return (\n            <PhaseIconContainer>\n                <Link to={this.props.url} title={this.props.title}>\n                    <IconContainer>\n                        <img\n                            src={this.props.icon}\n                            alt={this.props.title}\n                        />\n                    </IconContainer>\n                    <h3><span>{this.props.title}</span></h3>\n                    <span dangerouslySetInnerHTML={{__html: this.props.overview}}></span>\n                </Link>\n            </PhaseIconContainer>)\n    }\n}\n\nexport default PhaseIcon","import React from \"react\"\n\nimport { graphql, StaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport * as style from '../styles'\nimport PhaseIcon from './phase-icon'\n\nconst ProjectPhasesContainer = styled.section`\n    ol\n    {\n        list-style-type: none;\n    }\n    ol li::before\n    {\n        content: \"\";\n    }\n    li a {\n        display: block;\n        text-decoration: none;\n        padding: 24px 0 24px 16px;\n        min-height: 76px;\n    }\n    li\n    {\n        margin: -10px;\n        padding: 10px;\n        border-bottom: 1px solid #ececec;\n        background-position: 12px;\n    }\n    li:last-child\n    {\n        border-bottom:0;\n    }\n    ol li\n    {\n        margin: 0;\n    }\n    li:hover\n    {\n        background-color: ${style.palette.project_phases_background};\n    }\n    p\n    {\n        padding: 0;\n    }\n`;\n\nclass ProjectPhases extends React.Component\n{\n    render(){\n            return <StaticQuery\n                query={graphql`\n                        query Phases {\n                            kontentItemNavigationItem(system: {codename: {eq: \"nav_project_phases\"}}) {\n                                elements {\n                                child_items {\n                                    value {\n                                    ... on kontent_item_navigation_item {\n                                        elements {\n                                        content_item {\n                                            value {\n                                            ... on kontent_item_phase {\n                                                elements {\n                                                title {\n                                                    value\n                                                }\n                                                url {\n                                                    value\n                                                }\n                                                overview {\n                                                    value\n                                                }\n                                                icon {\n                                                    value {\n                                                    url\n                                                    }\n                                                }\n                                                }\n                                            }\n                                            }\n                                        }\n                                        }\n                                    }\n                                    }\n                                }\n                                }\n                            }\n                        }\n                    `}\n                render={data => \n                    <ProjectPhasesContainer>\n                        <ol>\n                            {data.kontentItemNavigationItem.elements.child_items.value\n                                .map(item => {\n                                    return item.elements.content_item.value.map(phase => {\n                                        return (<PhaseIcon key={phase.elements.url.value} size=\"small\" icon={phase.elements.icon.value[0].url} url={phase.elements.url.value} title={phase.elements.title.value} overview={phase.elements.overview.value} />);\n                                    })\n                                })}\n                        </ol>\n                    </ProjectPhasesContainer>\n                }\n            />\n    }\n}\n\nexport default ProjectPhases\n","import React from \"react\"\nimport Jumbotron from \"../components/jumbotron\"\nimport Teaser from \"../components/teaser\"\nimport Layout from \"../components/layout\"\nimport ProjectPhases from \"../components/project-phases\"\n\nexport default () => (\n    <Layout>\n        <main>\n            <Jumbotron\n                className=\"jumbotron-homepage\"\n                header=\"Kentico Advantage\"\n                teaser=\"Leverage the collective experience of Kentico solution architects to successfully navigate the process of building a Kentico project using best practices and avoiding pitfalls through every stage of your project.\"\n            />\n            \n            <Teaser>\n                <h2>Project phases</h2>\n                <p>We identified six primary phases for Kentico projects. If you follow a waterfall like development approach you'll apply each section in a linear fashion over the course of the project. Alternatively, if you follow an agile approach, you'll do this as of each sprint.</p>\n                <p>Regardless of the approach you take, each phase covers the key concepts and best practices you need to know, presents real-world scenarios to help with application, and provides additional resources related to the section.</p>\n            </Teaser>\n             \n            <ProjectPhases />\n        </main>\n    </Layout>\n)","import React from \"react\"\nimport ContentZone from \"./content-zone\"\n\nclass Teaser extends React.Component\n{\n    render(){\n        return (\n            <ContentZone className=\"highlighted\">\n                {this.props.children}\n            </ContentZone>)\n    }\n}\n\nexport default Teaser"],"sourceRoot":""}