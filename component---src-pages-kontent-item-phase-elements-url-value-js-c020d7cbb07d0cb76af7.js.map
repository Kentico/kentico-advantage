{"version":3,"sources":["webpack:///./src/components/table-of-contents.js","webpack:///./src/components/scenario.js","webpack:///./src/components/scenarios.js","webpack:///./src/components/nextprev-buttons.js","webpack:///./src/pages/{kontentItemPhase.elements__url__value}.js"],"names":["TableOfContentsContainer","styled","div","style","toc_background","TableOfContents","render","headings","this","getHeadingsFromText","props","content","map","heading","index","key","href","title","text","regex","found","exec","push","React","Component","Scenario","toggleVisibility","event","setState","state","active","toggleVisiblity","bind","scenario","system","id","class","onClick","elements","value","dangerouslySetInnerHTML","__html","detail","ScenariosContainer","zone_content_foreground","scenarios_background","scenarios_bottom_border","heading_foreground","scenarios_selected_background","scenarios_plus_foreground","sm","Scenarios","data","Array","isArray","length","scenarios","NextPrevButtonsContainer","nav","nextprev_button_background","nextprev_button_foreground","nextprev_button_hover_foreground","nextprev_button_hover_background","md","NextPrevButtons","query","phasesList","allKontentItemNavigationItem","edges","node","child_items","forEach","phase","content_item","subphases","subphase","phases","allKontentItemPhase","url","currentPhaseIndex","indexOf","prevPhase","find","p","nextPhase","to","className","IconContainer","kontentItemPhase","currentIndex","phaseIndex","subIndex","phaseSubIndex","kontentItemNavigationItem","phaseNav","subphaseNav","pageId","background","codename","page","header","teaser","icon","src","alt","replace","parseTables","images","links","linkedItems","modular_content","resolveImage","image","description","resolveLink","link","domNode","url_slug","children","resolveLinkedItem","linkedItem","console","log","type","Fragment","overview","JSON","stringify","undefined","references"],"mappings":"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","file":"component---src-pages-kontent-item-phase-elements-url-value-js-c020d7cbb07d0cb76af7.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport * as style from '../styles'\n\nconst TableOfContentsContainer = styled.div`\n    ol\n    {\n        background: ${style.palette.toc_background};\n        margin: 0;\n        padding: 10px 10px 5px 15px;\n        list-style-type: none;\n    }\n`;\n\nclass TableOfContents extends React.Component\n{\n    render(){\n        const headings = this.getHeadingsFromText(this.props.content);\n\n        return (\n            <TableOfContentsContainer>\n                <p>On this page:</p>\n                <ol>\n                    {headings.map((heading, index) => <li key={index}><a key={index} href={'#h' + index} title={heading}>{heading}</a></li>)}\n                </ol>\n            </TableOfContentsContainer>\n        );\n    }\n\n    getHeadingsFromText(text){\n        var headings = []; \n        var regex = /<h2>((<a(.*?)>)*(.*?)(<\\/a>)*)<\\/h2>/gim;\n        var found = regex.exec(text);\n\n        while (found != null) {\n            headings.push(found[4]);\n            found = regex.exec(text);\n        }\n\n        return headings;\n    }\n}\n\nexport default TableOfContents","import React from \"react\"\n\n\nclass Scenario extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {active: false};\n        this.toggleVisiblity = this.toggleVisibility.bind(this);\n    }\n\n    toggleVisibility = event => {\n        this.setState(state => ({active: !state.active}));\n    }\n\n    render(){\n        return (<li key={this.props.scenario.system.id}>\n            <h3><a class={this.state.active ? 'open' : 'closed'} href=\"#!\" onClick={this.toggleVisibility}>{this.props.scenario.elements.title.value}</a></h3>\n                {this.state.active &&  \n            <div dangerouslySetInnerHTML={{__html: this.props.scenario.elements.detail.value}}></div>}\n        </li>);\n    }\n}\n\nexport default Scenario","import React from \"react\"\nimport styled from \"styled-components\"\nimport * as style from '../styles'\nimport Scenario from './scenario'\n\nconst ScenariosContainer = styled.div`\n\ncolor: ${style.palette.zone_content_foreground};\n\nul\n{\n\tlist-style-type: none;\n\tmargin: 0;\n}\n\nul li\n{\n\tbackground: ${style.palette.scenarios_background};\n\tborder-bottom: 1px solid ${style.palette.scenarios_bottom_border};\n\tpadding: 10px 20px;\n\tdisplay: block;\n}\nul li::before\n{\n\tdisplay: none;\n\tcontent: none;\n}\n\nh3\n{\n\tmargin: -10px -20px;\n}\n\nh3 a\n{\n\tpadding: 10px 20px;\n\tcursor: pointer;\n\tdisplay: flex;\n\tflex-direction: row;\n\ttext-decoration: none;\n\tcolor: ${style.palette.heading_foreground};\n}\nh3 a:hover,\nh3 a.open\n{\n\tbackground: ${style.palette.scenarios_selected_background};\n}\nh3 a::before\n{\n\tcolor: ${style.palette.scenarios_plus_foreground};\n\tfont-size: 1.6em;\n\tpadding-right: 20px;\n\talign-self: center;\n\tflex: 0 0 20px;\n\ttext-align: center;\n}\nh3 a.closed::before\n{\n\tcontent: \"+\";\n}\nh3 a.open::before\n{\n\tcontent: \"-\";\n}\nul li div\n{\n\tmargin: 20px 0 10px;\n}\n\n${style.media.sm`\n    ul li div\n\t{\n\t\tmargin-left: 40px;\n\t}\n`}\n\n.zone ul.scenarios\n{\n\tmargin-bottom: 20px;\n}\n`;\n\nclass Scenarios extends React.Component\n{\n    render(){\n        if (!this.props.data || !Array.isArray(this.props.data) || this.props.data.length === 0)\n        {\n            return null;\n        }\n\n        var scenarios = this.props.data.map((scenario, index) => {\n            return (<Scenario scenario={scenario} />);\n        });\n\n        if (scenarios)\n        {\n            scenarios = \n                (<ScenariosContainer>\n                    <ul>\n                        {scenarios}\n                    </ul>\n                </ScenariosContainer>);\n        }\n\n        return scenarios;\n    }\n}\n\nexport default Scenarios","import React from \"react\"\nimport styled from \"styled-components\"\nimport * as style from '../styles'\nimport { graphql, StaticQuery, Link } from \"gatsby\"\n\n\nconst NextPrevButtonsContainer = styled.nav`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\n    a\n    {\n        padding: 15px 25px;\n        background: ${style.palette.nextprev_button_background};\n        color: ${style.palette.nextprev_button_foreground};\n        width: 110px;\n        text-align: center;\n        text-decoration: none;\n    }\n\n    .prev\n    {\n        margin-right: auto;\n    }\n\n    .next\n    {\n        margin-left: auto;\n    }\n\n    a:hover\n    {\n        color: ${style.palette.nextprev_button_hover_foreground};\n        background: ${style.palette.nextprev_button_hover_background};\n    }\n\n    ${style.media.md`\n        padding-right: 0;\n        margin-right: 278px;\n    `}\n`;\n\n\n\nclass NextPrevButtons extends React.Component\n{\n    render(){\n        return (\n        <StaticQuery\n            query={graphql`\n{\n  allKontentItemNavigationItem(filter: {system: {codename: {eq: \"nav_project_phases\"}}}) {\n    edges {\n      node {\n        elements {\n          child_items {\n            value {\n              ... on kontent_item_navigation_item {\n                elements {\n                  content_item {\n                    value {\n                      ... on kontent_item_phase {\n                        system {\n                          id\n                        }\n                        elements {\n                          subphases {\n                            value {\n                              system {\n                                id\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  allKontentItemPhase {\n    edges {\n      node {\n        system {\n          id\n        }\n        elements {\n          title {\n            value\n          }\n          url {\n            value\n          }\n        }\n      }\n    }\n  }\n}\n                `}\n            render={data => {\n                const phasesList = [];\n                data.allKontentItemNavigationItem.edges[0].node.elements.child_items.value.forEach(phase => {\n                    if (phase.elements.content_item && Array.isArray(phase.elements.content_item.value) && phase.elements.content_item.value.length === 1)\n                    {\n                        // add main phase ID\n                        phasesList.push(phase.elements.content_item.value[0].system.id);\n                        // process subphases\n                        \n                        if (phase.elements.content_item.value[0].elements.subphases && Array.isArray(phase.elements.content_item.value[0].elements.subphases.value) && phase.elements.content_item.value[0].elements.subphases.value.length > 0)\n                        {\n                            phase.elements.content_item.value[0].elements.subphases.value.forEach(subphase => {\n                                phasesList.push(subphase.system.id);\n                            })\n                        }\n                    }\n                })\n\n                const phases = [];\n                data.allKontentItemPhase.edges.forEach(phase => {\n                    phases.push(({id: phase.node.system.id, title: phase.node.elements.title.value, url: phase.node.elements.url.value}));\n                });\n\n                const currentPhaseIndex = phasesList.indexOf(this.props.phase.system.id);\n                const prevPhase = currentPhaseIndex > 0 ? phases.find(p => p.id === phasesList[currentPhaseIndex-1]) : null;\n                const nextPhase = currentPhaseIndex+1 < phasesList.length ? phases.find(p => p.id === phasesList[currentPhaseIndex+1]) : null;\n\n                return (\n                <NextPrevButtonsContainer>\n                    {prevPhase && \n                        <Link to={\"/\" + prevPhase.url} title={prevPhase.title} className=\"prev\">Previous</Link>\n                    }\n                    {nextPhase &&\n                        <Link to={\"/\" + nextPhase.url} title={nextPhase.title} className=\"next\">Next</Link>\n                    }\n                </NextPrevButtonsContainer>\n                );\n            }}\n            />\n        );\n    }\n}\n\nexport default NextPrevButtons","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Jumbotron from \"../components/jumbotron\"\nimport Helmet from 'react-helmet'\nimport Teaser from \"../components/teaser\"\nimport ContentZone from \"../components/content-zone\"\nimport Breadcrumbs from \"../components/breadcrumbs\"\nimport TableOfContents from \"../components/table-of-contents\"\nimport Scenarios from \"../components/scenarios\"\nimport References from \"../components/references\"\nimport styled from 'styled-components'\nimport NextPrevButtons from \"../components/nextprev-buttons\"\nimport { RichTextElement } from \"@kentico/gatsby-kontent-components\"\nimport { graphql, Link } from \"gatsby\"\n\n\nconst IconContainer = styled.div`\nimg\n{\n    width: 238px;\n    height: 238px;\n}\n`\n\nexport default ({data}) => {\n    const phase = data.kontentItemPhase;\n\n    var addAnchors = function(text){\n        var textAfter = text.replace(/<h2/g, (() => {\n            var index = 0;\n            return () => {\n                return '<h2 id=\"h' + index++ + '\"';\n            }\n        })());\n        return textAfter;\n    };\n    var parseTables = function(text){\n        return text.replace(/(<td>)\\{\\.(.*?)\\}+/g, '<td class=\"$2\">');\n    }\n\n    var currentIndex = 0;\n    var phaseIndex = 0;\n    var subIndex = 0;\n    var phaseSubIndex = 0;\n    \n    data.kontentItemNavigationItem.elements.child_items.value.forEach(phaseNav => {\n        if (phaseNav.elements.content_item && Array.isArray(phaseNav.elements.content_item.value) && phaseNav.elements.content_item.value.length === 1)\n        {\n            currentIndex++;\n            if (phaseNav.elements.content_item.value[0].system.id === phase.system.id)\n            {\n                phaseIndex = currentIndex;\n            }\n            if (phaseNav.elements.content_item.value[0].elements.subphases.value && Array.isArray(phaseNav.elements.content_item.value[0].elements.subphases.value) && phaseNav.elements.content_item.value[0].elements.subphases.value.length > 0)\n            {\n                subIndex = 0;\n                phaseNav.elements.content_item.value[0].elements.subphases.value.forEach(subphaseNav => {\n                    subIndex++;\n\n                    if (subphaseNav.system.id === phase.system.id)\n                    {\n                        phaseIndex = currentIndex;\n                        phaseSubIndex = subIndex;\n                    }\n                })\n            }\n        }\n    });\n\n    const index = phaseIndex + '.' + (phaseSubIndex > 0 ? phaseSubIndex + '.' : '');\n\n    return (\n        <Layout pageId={phase.system.id}>\n            <Helmet>\n                <title>{phase.elements.title.value}</title>\n            </Helmet>\n            \n            <Breadcrumbs pageId={phase.system.id} />\n            \n            <main>\n                <Jumbotron\n                    className={'jumbotron-content-page ' + phase.elements.background.value[0].codename}\n                    page={phase.elements.url.value}\n                    header={index + ' ' + phase.elements.title.value}\n                />\n\n                <Teaser>\n                    <span dangerouslySetInnerHTML={{__html: phase.elements.teaser.value}}></span>\n                </Teaser>\n\n                <ContentZone className=\"right-zone\">\n                    {phase.elements.icon && Array.isArray(phase.elements.icon.value) && phase.elements.icon.value.length === 1 &&\n                        <IconContainer className=\"icon\">\n                            <img\n                                src={phase.elements.icon.value[0].url}\n                                alt={phase.elements.title.value}>\n                            </img>\n                        </IconContainer>\n                    }\n\n                    <TableOfContents content={phase.elements.content.value} />\n                </ContentZone>\n                \n\n                <ContentZone>\n                  <RichTextElement\n                    value={parseTables(addAnchors(phase.elements.content.value))}\n                    images={phase.elements.content.images}\n                    links={phase.elements.content.links}\n                    linkedItems={phase.elements.content.modular_content}\n                    resolveImage={image => {\n                      return (\n                        <img\n                          src={image.url}\n                          alt={image.description}\n                        />\n                      )\n                    }}\n                    resolveLink={(link, domNode) => {\n                      return (\n                        <Link to={`/${link.url_slug}`}>\n                          {domNode.children[0].data}\n                        </Link>\n                      )\n                    }}\n                    resolveLinkedItem={linkedItem => {\n                      console.log(linkedItem);\n                      if (linkedItem.system.type === 'phase')\n                      {\n                        return <React.Fragment>\n                          <h2>\n                            <Link to={'/' + linkedItem.elements.url.value} title={linkedItem.elements.title.value}>{linkedItem.elements.title.value}</Link>\n                          </h2>\n                          {!linkedItem.elements.overview.value !== '<p><br></p>' && <div dangerouslySetInnerHTML={{__html: linkedItem.elements.overview.value}}></div>}\n                        </React.Fragment>\n                      }\n                      else if (linkedItem.system.type === 'scenario')\n                      {\n                        return <Scenarios data={[linkedItem]} />\n                      }\n                      \n                      return <pre>{JSON.stringify(linkedItem, undefined, 2)}</pre>\n                    }}\n                  />\n                    {/* <div dangerouslySetInnerHTML={{__html: parseTables(addAnchors(phase.elements.content.resolvedHtml))}}></div> */}\n                </ContentZone>\n\n                {phase.elements.scenarios && Array.isArray(phase.elements.scenarios.value) && phase.elements.scenarios.value.length > 0 && \n                <ContentZone>\n                    <Scenarios data={phase.elements.scenarios.value} />\n                </ContentZone>\n                }\n\n                {phase.elements.references && Array.isArray(phase.elements.references) && phase.elements.references.length > 0 &&\n                <ContentZone>\n                    <References data={phase.elements.references} />\n                </ContentZone>\n                }\n\n                <NextPrevButtons phase={phase} />\n            </main>\n        </Layout>\n        );\n    }\n\nexport const query = graphql`\n         query($id: String!) {\n           kontentItemPhase(id: { eq: $id }) {\n             system { id }\n             elements {\n               title {\n                 value\n               }\n               url {\n                 value\n               }\n               content {\n                 value\n                 images {\n                  image_id\n                  url\n                  description\n                 }\n                 links {\n                  link_id\n                  url_slug\n                 }\n                 modular_content {\n                  ... on kontent_item_phase {\n                    system {\n                      codename\n                      type\n                    }\n                    elements {\n                      title {\n                        value\n                      }\n                      url {\n                        value\n                      }\n                      overview {\n                        value\n                      }\n                    }\n                  }\n                  ... on kontent_item_scenario {\n                    system {\n                      id\n                      codename\n                      type\n                    }\n                     elements {\n                       detail {\n                         value\n                       }\n                       title {\n                         value\n                       }\n                     }\n                  }\n                }\n               }\n               overview {\n                 value\n               }\n               teaser {\n                 value\n               }\n               icon {\n                 value {\n                   url\n                 }\n               }\n               background {\n                 value {\n                   codename\n                 }\n               }\n               scenarios {\n                 value {\n                   ... on kontent_item_scenario {\n                     system { id }\n                     elements {\n                       detail {\n                         value\n                       }\n                       title {\n                         value\n                       }\n                     }\n                   }\n                 }\n               }\n               references {\n                 value {\n                   ... on kontent_item_link {\n                     elements {\n                       title {\n                         value\n                       }\n                       url {\n                         value\n                       }\n                     }\n                   }\n                 }\n               }\n             }\n             system {\n               id\n             }\n           }\n           kontentItemNavigationItem(\n             system: { codename: { eq: \"nav_project_phases\" } }\n           ) {\n             elements {\n               child_items {\n                 value {\n                   ... on kontent_item_navigation_item {\n                     elements {\n                       content_item {\n                         value {\n                           ... on kontent_item_phase {\n                             system { id }\n                             elements {\n                               subphases {\n                                 value {\n                                   system { id }\n                                 }\n                               }\n                             }\n                           }\n                         }\n                       }\n                     }\n                   }\n                 }\n               }\n             }\n           }\n         }\n       `;"],"sourceRoot":""}