{"data":{"allKenticoCloudItemPhase":{"edges":[{"node":{"elements":{"title":{"value":"Planning content management"},"url":{"value":"planning-content-management"},"content":{"value":"<h2>Content production</h2>\n<h3>Content is created and managed inside Kentico CMS/EMS</h3>\n<p>If content is managed this way, the developers must prepare the data structures and storage before content can be entered. If the project is already live, we recommend using a staging environment for content creation rather than directly editing in the production.</p>\n<h3>Content is created outside and managed inside of Kentico CMS/EMS</h3>\n<p>When content is managed in this fashion, the content can be created before or parallel to the development. One example of such a system is&nbsp;<a href=\"https://kenticocloud.com/\">Kentico Cloud</a>, which enables content editors to create content in advance before the site is ready for them, while enabling developers to easily import this content to Kentico EMS via&nbsp;<a href=\"https://developer.kenticocloud.com/reference#content-management-api\">Kentico Cloud API</a>.<br>\n<br>\nAnother example would be if all content was created in spreadsheets or in some other system with data structures that can be mapped and imported using the Kentico API or via the import toolkit.</p>\n<h3>Content is created and managed outside of Kentico CMS/EMS</h3>\n<p>This content is typically used for items like a product catalog, and is either synchronized to Kentico using scheduled tasks, the&nbsp;<a href=\"https://docs.kentico.com/k12/integrating-3rd-party-systems/using-the-integration-bus/integration-bus-overview\">Integration bus</a>, or pulled directly from the external system at runtime (e.g., web services, SDKs, etc.).</p>\n<object type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"link\" data-codename=\"content_created_in_parallel_with_implementation\"></object>\n<object type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"link\" data-codename=\"content_migrated_to_kentico\"></object>\n<object type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"link\" data-codename=\"content_not_ready_until_after_implementation\"></object>\n<object type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"link\" data-codename=\"product_content_managed_outside_of_kentico\"></object>\n<h2>Content tree or sitemap</h2>\n<h3>Content organization, URLs and SEO</h3>\n<ul>\n  <li>The organization of the content tree can be used to generate the structure of the XML sitemap for search engines.</li>\n  <li>When using the portal engine:&nbsp;\n    <ul>\n      <li>Modify the URL of page or add aliases only as needed.</li>\n      <li>Utilize&nbsp;wildcard URLs to use a single template&nbsp;for displaying dynamic content from various sources (e.g., custom tables, custom module classes) while still having SEO friendly URLs.</li>\n    </ul>\n  </li>\n</ul>\n<h3>Content taxonomy</h3>\n<ul>\n  <li>Organize pages in the content tree if you only need simple categorization, where a page belongs to only one category.</li>\n  <li>Use one of the following options for more complex categorization:\n    <ul>\n      <li>Use page relationships when you need to manually create relationship between different pages (e.g., related news stories).</li>\n      <li>Use tags when you need a flat, non-hierarchical structure that allows for classifying pages based on various criteria (e.g., topics).</li>\n      <li>Use categories when you need to have a hierarchical structure to page classification (e.g., an iPhone page could be assigned with the&nbsp;<em>cell phone</em>,&nbsp;<em>cell phone</em>&nbsp;&gt;&nbsp;<em>smart phone</em>, and&nbsp;<em>apple categories).</em></li>\n      <li>Use field references when you need reference another object of a specific object type (e.g., assign a country (built-in object) to an office page).</li>\n    </ul>\n  </li>\n</ul>\n<h3>Sharing content</h3>\n<ul>\n  <li>Define which pages or page content needs to be presented on multiple websites or reused in multiple places on the same web site:\n    <ul>\n      <li>Consider <a href=\"https://docs.kentico.com/k12/managing-website-content/working-with-pages/copying-and-moving-pages-creating-linked-pages?devModel=mvc#Copyingandmovingpages,creatinglinkedpages-Linkingapage\">linking a page</a> when sharing whole pages.</li>\n      <li>Consider how editors might be able to <a href=\"https://docs.kentico.com/k12/developing-websites/defining-website-content-structure/creating-and-configuring-page-types/configuring-page-types/reusing-existing-page-content\">re-use existing page content</a>.</li>\n    </ul>\n  </li>\n</ul>\n<h3>Securing content</h3>\n<ul>\n  <li>Restrict access to individual pages or content tree sections with&nbsp;<a href=\"https://docs.kentico.com/k12/managing-users/configuring-permissions/configuring-page-permissions\">page permissions</a>:\n    <ul>\n      <li>Grant permissions per user or role (memberships can be assigned with roles and gain permissions indirectly this way).</li>\n    </ul>\n  </li>\n  <li>Check permissions only when necessary as it is performance intensive.</li>\n</ul>\n<h3>System pages</h3>\n<ul>\n  <li>Decide which of the following system pages need to be in the tree and editable by content editors:\n    <ul>\n      <li>Logon page</li>\n      <li>404 Page Not Found (critical for SEO)</li>\n      <li>Robots.txt (critical for SEO)</li>\n      <li>Sitemap&nbsp;(critical for SEO)</li>\n    </ul>\n  </li>\n</ul>\n<h3>Content life-cycle</h3>\n<ul>\n  <li>Define a content life-cycle and list all necessary steps.\n    <ul>\n      <li>Apply different Kentico workflows to different sections or pages if necessary.</li>\n    </ul>\n  </li>\n  <li>Specify authorized roles or users to modify, approve, or reject the page in each step as well as to be notified about these changes.</li>\n  <li>Consider restricting the number of page versions in the settings since all content under workflow is automatically versioned.</li>\n  <li>Consider enabling the&nbsp;content locking&nbsp;feature in order to prevent unintended overwriting of content changes.</li>\n  <li>Consider the following to keep outdated content under control:\n    <ul>\n      <li>Hide&nbsp;pages&nbsp;from live site by archiving or unpublishing them.</li>\n      <li>Move pages to a dedicated archive location in the content tree.</li>\n    </ul>\n  </li>\n  <li>Identify how often content should be reviewed.</li>\n  <li>Control data growth and keep desired performance by having processes in place to:\n    <ul>\n      <li>Delete old pages (with replacement URL redirection for SEO purposes).</li>\n      <li>Move old pages out of the content tree (e.g., to a custom table or custom module class).</li>\n    </ul>\n  </li>\n  <li>Consider automating content processing with advanced workflow.</li>\n</ul>\n<h3>Multilingual content</h3>\n<ul>\n  <li>Use&nbsp;translation services&nbsp;to automate the translation process (this can be part of an advanced workflow).</li>\n  <li>Use&nbsp;culture specific URLs&nbsp;(e.g. /en-us/news and /fr-fr/news)&nbsp;for the same page to meet your SEO requirements.</li>\n  <li>Consider whether a page should fall back to the default content, 404, or other page if it is not available in the current language.</li>\n</ul>\n<h3>Products (SKUs)</h3>\n<ul>\n  <li>Evaluate whether you should use SKUs with pages versus the standalone SKUs option of storing products (see the&nbsp;<a href=\"https://docs.kentico.com/k12/e-commerce-features/customizing-on-line-stores/e-commerce-customization-model?devModel=mvc\">E-commerce customization model</a> documentation for more details).</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n  <li>Keep the total pages for all sites, including culture variants, under 500K pages.</li>\n  <li>Keep the number of direct children of any particular page under 1K.\n    <ul>\n      <li>Keep content categorized, grouped, or structured using some rule (e.g., group content by release date: /Blogs/2016/January/My-Blog-Post).</li>\n    </ul>\n  </li>\n  <li>Move content outside of the content tree after publishing if you expect there will be too much content.\n    <ul>\n      <li>This allows you to use workflows while keeping the content tree size small.</li>\n    </ul>\n  </li>\n</ul>\n<h3>UI personalization</h3>\n<ul>\n  <li>Restrict access to applications, modules, and WYSIWYG toolbar options based on roles.\n    <ul>\n      <li>Restrict editor access to certain page properties (e.g., metadata, URL alias, etc.) within the Pages application as necessary.</li>\n      <li>Restrict editor access to certain&nbsp;buttons&nbsp;(e.g., source view, font color, etc.) as necessary.</li>\n    </ul>\n  </li>\n</ul>\n<h2>Media organization</h2>\n<p>Determine the proper way to store media files on the website by analyzing the nature of the files (e.g., sizes, types, quantity), as well as how they will be used (e.g., do they need security, resizing, or watermarking).<br>\n<br>\nWe recommend storing most files in the standard media library which stores the files on the disk by default. Furthermore, this approach also provides the easiest path to using a CDN. We recommend avoiding serving files from attachments or the content tree unless you need functionality that can only be provided this way.&nbsp;</p>\n<h3>Page files</h3>\n<ul>\n  <li>Use the&nbsp;<em>CMS.File</em>&nbsp;page type for storing files in the content tree when you need features like workflow, multilingual support, search, permissioning, and categorization (tags or categories).</li>\n  <li>Avoid using the content tree if you plan to upload a large quantity of files or large size files as this can severely impact the performance.</li>\n</ul>\n<h3>Page attachments</h3>\n<ul>\n  <li>Use only when you need to associate file(s) with a specific page.\n    <ul>\n      <li>Attachments follow the life cycle and restrictions of the page they are attached to.</li>\n    </ul>\n  </li>\n</ul>\n<h3>Media libraries</h3>\n<ul>\n  <li>Use when you are storing a large number of files or storing large files.</li>\n  <li>Use when you need to serve the files from a CDN.</li>\n  <li>Create a custom smart search indexer if you need to search in a media library, as the binary data of media library files is not searchable by default.</li>\n  <li>Avoid media libraries if you need to secure the files, as the files are always accessible (Note: you can restrict access to a media library in the administration interface, but the files are still public).</li>\n</ul>\n<h3>Design assets</h3>\n<ul>\n  <li>Store your design assets on the file system in an organized way (e.g., images for a stylesheet should be stored in the App_Themes subfolder for the stylesheet they are related to).</li>\n  <li>Store JavaScript files in the Scripts/Custom folder to enable access to them from the administration interface.</li>\n</ul>","resolvedHtml":"<h2>Content production</h2>\n<h3>Content is created and managed inside Kentico CMS/EMS</h3>\n<p>If content is managed this way, the developers must prepare the data structures and storage before content can be entered. If the project is already live, we recommend using a staging environment for content creation rather than directly editing in the production.</p>\n<h3>Content is created outside and managed inside of Kentico CMS/EMS</h3>\n<p>When content is managed in this fashion, the content can be created before or parallel to the development. One example of such a system is&nbsp;<a href=\"https://kenticocloud.com/\">Kentico Cloud</a>, which enables content editors to create content in advance before the site is ready for them, while enabling developers to easily import this content to Kentico EMS via&nbsp;<a href=\"https://developer.kenticocloud.com/reference#content-management-api\">Kentico Cloud API</a>.<br>\n<br>\nAnother example would be if all content was created in spreadsheets or in some other system with data structures that can be mapped and imported using the Kentico API or via the import toolkit.</p>\n<h3>Content is created and managed outside of Kentico CMS/EMS</h3>\n<p>This content is typically used for items like a product catalog, and is either synchronized to Kentico using scheduled tasks, the&nbsp;<a href=\"https://docs.kentico.com/k12/integrating-3rd-party-systems/using-the-integration-bus/integration-bus-overview\">Integration bus</a>, or pulled directly from the external system at runtime (e.g., web services, SDKs, etc.).</p>\n<p type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"link\" data-codename=\"content_created_in_parallel_with_implementation\" class=\"kc-linked-item-wrapper\"></p>\n<p type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"link\" data-codename=\"content_migrated_to_kentico\" class=\"kc-linked-item-wrapper\"></p>\n<p type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"link\" data-codename=\"content_not_ready_until_after_implementation\" class=\"kc-linked-item-wrapper\"></p>\n<p type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"link\" data-codename=\"product_content_managed_outside_of_kentico\" class=\"kc-linked-item-wrapper\"></p>\n<h2>Content tree or sitemap</h2>\n<h3>Content organization, URLs and SEO</h3>\n<ul>\n  <li>The organization of the content tree can be used to generate the structure of the XML sitemap for search engines.</li>\n  <li>When using the portal engine:&nbsp;\n    <ul>\n      <li>Modify the URL of page or add aliases only as needed.</li>\n      <li>Utilize&nbsp;wildcard URLs to use a single template&nbsp;for displaying dynamic content from various sources (e.g., custom tables, custom module classes) while still having SEO friendly URLs.</li>\n    </ul>\n  </li>\n</ul>\n<h3>Content taxonomy</h3>\n<ul>\n  <li>Organize pages in the content tree if you only need simple categorization, where a page belongs to only one category.</li>\n  <li>Use one of the following options for more complex categorization:\n    <ul>\n      <li>Use page relationships when you need to manually create relationship between different pages (e.g., related news stories).</li>\n      <li>Use tags when you need a flat, non-hierarchical structure that allows for classifying pages based on various criteria (e.g., topics).</li>\n      <li>Use categories when you need to have a hierarchical structure to page classification (e.g., an iPhone page could be assigned with the&nbsp;<em>cell phone</em>,&nbsp;<em>cell phone</em>&nbsp;&gt;&nbsp;<em>smart phone</em>, and&nbsp;<em>apple categories).</em></li>\n      <li>Use field references when you need reference another object of a specific object type (e.g., assign a country (built-in object) to an office page).</li>\n    </ul>\n  </li>\n</ul>\n<h3>Sharing content</h3>\n<ul>\n  <li>Define which pages or page content needs to be presented on multiple websites or reused in multiple places on the same web site:\n    <ul>\n      <li>Consider <a href=\"https://docs.kentico.com/k12/managing-website-content/working-with-pages/copying-and-moving-pages-creating-linked-pages?devModel=mvc#Copyingandmovingpages,creatinglinkedpages-Linkingapage\">linking a page</a> when sharing whole pages.</li>\n      <li>Consider how editors might be able to <a href=\"https://docs.kentico.com/k12/developing-websites/defining-website-content-structure/creating-and-configuring-page-types/configuring-page-types/reusing-existing-page-content\">re-use existing page content</a>.</li>\n    </ul>\n  </li>\n</ul>\n<h3>Securing content</h3>\n<ul>\n  <li>Restrict access to individual pages or content tree sections with&nbsp;<a href=\"https://docs.kentico.com/k12/managing-users/configuring-permissions/configuring-page-permissions\">page permissions</a>:\n    <ul>\n      <li>Grant permissions per user or role (memberships can be assigned with roles and gain permissions indirectly this way).</li>\n    </ul>\n  </li>\n  <li>Check permissions only when necessary as it is performance intensive.</li>\n</ul>\n<h3>System pages</h3>\n<ul>\n  <li>Decide which of the following system pages need to be in the tree and editable by content editors:\n    <ul>\n      <li>Logon page</li>\n      <li>404 Page Not Found (critical for SEO)</li>\n      <li>Robots.txt (critical for SEO)</li>\n      <li>Sitemap&nbsp;(critical for SEO)</li>\n    </ul>\n  </li>\n</ul>\n<h3>Content life-cycle</h3>\n<ul>\n  <li>Define a content life-cycle and list all necessary steps.\n    <ul>\n      <li>Apply different Kentico workflows to different sections or pages if necessary.</li>\n    </ul>\n  </li>\n  <li>Specify authorized roles or users to modify, approve, or reject the page in each step as well as to be notified about these changes.</li>\n  <li>Consider restricting the number of page versions in the settings since all content under workflow is automatically versioned.</li>\n  <li>Consider enabling the&nbsp;content locking&nbsp;feature in order to prevent unintended overwriting of content changes.</li>\n  <li>Consider the following to keep outdated content under control:\n    <ul>\n      <li>Hide&nbsp;pages&nbsp;from live site by archiving or unpublishing them.</li>\n      <li>Move pages to a dedicated archive location in the content tree.</li>\n    </ul>\n  </li>\n  <li>Identify how often content should be reviewed.</li>\n  <li>Control data growth and keep desired performance by having processes in place to:\n    <ul>\n      <li>Delete old pages (with replacement URL redirection for SEO purposes).</li>\n      <li>Move old pages out of the content tree (e.g., to a custom table or custom module class).</li>\n    </ul>\n  </li>\n  <li>Consider automating content processing with advanced workflow.</li>\n</ul>\n<h3>Multilingual content</h3>\n<ul>\n  <li>Use&nbsp;translation services&nbsp;to automate the translation process (this can be part of an advanced workflow).</li>\n  <li>Use&nbsp;culture specific URLs&nbsp;(e.g. /en-us/news and /fr-fr/news)&nbsp;for the same page to meet your SEO requirements.</li>\n  <li>Consider whether a page should fall back to the default content, 404, or other page if it is not available in the current language.</li>\n</ul>\n<h3>Products (SKUs)</h3>\n<ul>\n  <li>Evaluate whether you should use SKUs with pages versus the standalone SKUs option of storing products (see the&nbsp;<a href=\"https://docs.kentico.com/k12/e-commerce-features/customizing-on-line-stores/e-commerce-customization-model?devModel=mvc\">E-commerce customization model</a> documentation for more details).</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n  <li>Keep the total pages for all sites, including culture variants, under 500K pages.</li>\n  <li>Keep the number of direct children of any particular page under 1K.\n    <ul>\n      <li>Keep content categorized, grouped, or structured using some rule (e.g., group content by release date: /Blogs/2016/January/My-Blog-Post).</li>\n    </ul>\n  </li>\n  <li>Move content outside of the content tree after publishing if you expect there will be too much content.\n    <ul>\n      <li>This allows you to use workflows while keeping the content tree size small.</li>\n    </ul>\n  </li>\n</ul>\n<h3>UI personalization</h3>\n<ul>\n  <li>Restrict access to applications, modules, and WYSIWYG toolbar options based on roles.\n    <ul>\n      <li>Restrict editor access to certain page properties (e.g., metadata, URL alias, etc.) within the Pages application as necessary.</li>\n      <li>Restrict editor access to certain&nbsp;buttons&nbsp;(e.g., source view, font color, etc.) as necessary.</li>\n    </ul>\n  </li>\n</ul>\n<h2>Media organization</h2>\n<p>Determine the proper way to store media files on the website by analyzing the nature of the files (e.g., sizes, types, quantity), as well as how they will be used (e.g., do they need security, resizing, or watermarking).<br>\n<br>\nWe recommend storing most files in the standard media library which stores the files on the disk by default. Furthermore, this approach also provides the easiest path to using a CDN. We recommend avoiding serving files from attachments or the content tree unless you need functionality that can only be provided this way.&nbsp;</p>\n<h3>Page files</h3>\n<ul>\n  <li>Use the&nbsp;<em>CMS.File</em>&nbsp;page type for storing files in the content tree when you need features like workflow, multilingual support, search, permissioning, and categorization (tags or categories).</li>\n  <li>Avoid using the content tree if you plan to upload a large quantity of files or large size files as this can severely impact the performance.</li>\n</ul>\n<h3>Page attachments</h3>\n<ul>\n  <li>Use only when you need to associate file(s) with a specific page.\n    <ul>\n      <li>Attachments follow the life cycle and restrictions of the page they are attached to.</li>\n    </ul>\n  </li>\n</ul>\n<h3>Media libraries</h3>\n<ul>\n  <li>Use when you are storing a large number of files or storing large files.</li>\n  <li>Use when you need to serve the files from a CDN.</li>\n  <li>Create a custom smart search indexer if you need to search in a media library, as the binary data of media library files is not searchable by default.</li>\n  <li>Avoid media libraries if you need to secure the files, as the files are always accessible (Note: you can restrict access to a media library in the administration interface, but the files are still public).</li>\n</ul>\n<h3>Design assets</h3>\n<ul>\n  <li>Store your design assets on the file system in an organized way (e.g., images for a stylesheet should be stored in the App_Themes subfolder for the stylesheet they are related to).</li>\n  <li>Store JavaScript files in the Scripts/Custom folder to enable access to them from the administration interface.</li>\n</ul>"},"overview":{"value":"<p>Create a strategy for the initial and ongoing content and asset production, organization, etc.</p>"},"teaser":{"value":"<p>Every organization has a different process for managing content. Some projects have strict legal requirements whereas others may have a minimal set of suggested guidelines for editors. You need to understand and plan for these requirements up front. By supporting the business processes of the client, you are setting them up for continued success. In this section we explore the key facets to creating a solid content management strategy.&nbsp;</p>"},"icon":{"assets":[{"url":"https://assets-us-01.kc-usercontent.com:443/c1b57fce-743a-0048-c4ee-4f8c42ea3ab8/648da1c8-eb72-46ad-881c-6edcae973821/icon-planning.svg"}]},"background":{"options":[{"codename":"blue"}]},"scenarios":[],"references":[]},"system":{"id":"c4901224-e559-4ecf-9ace-f2a88dcf21d8"}}}]}},"pageContext":{"id":"c4901224-e559-4ecf-9ace-f2a88dcf21d8"}}